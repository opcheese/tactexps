;;
;; Header files for NftCollection
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_compute_contract_address
slice __tact_compute_contract_address(int chain, cell code, cell data) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_dict_set_code
cell __tact_dict_set_code(cell dict, int id, cell code) inline;

;; __tact_dict_get_code
cell __tact_dict_get_code(cell dict, int id) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $NftGetRoyaltyParams$_load
(slice, ((int))) $NftGetRoyaltyParams$_load(slice sc_0) inline;

;; $NftReportRoyaltyParams$_store
builder $NftReportRoyaltyParams$_store(builder build_0, (int, int, int, slice) v) inline;

;; $NftReportRoyaltyParams$_store_cell
cell $NftReportRoyaltyParams$_store_cell((int, int, int, slice) v) inline;

;; $NftDeploy$_store
builder $NftDeploy$_store(builder build_0, (int, slice, cell, slice, int, int) v) inline_ref;

;; $NftDeploy$_store_cell
cell $NftDeploy$_store_cell((int, slice, cell, slice, int, int) v) inline;

;; $RequestNftDeploy$_load
(slice, ((int, int, slice, cell))) $RequestNftDeploy$_load(slice sc_0) inline;

;; $NftCollection$_store
builder $NftCollection$_store(builder build_0, (slice, int, cell, slice, int, int) v) inline;

;; $NftCollection$_load
(slice, ((slice, int, cell, slice, int, int))) $NftCollection$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $NftRoyaltyParams$_to_external
(int, int, slice) $NftRoyaltyParams$_to_external(((int, int, slice)) v) inline;

;; $NftCollectionData$_to_external
(int, cell, slice) $NftCollectionData$_to_external(((int, cell, slice)) v) inline;

;; $NftItem$init$_store
builder $NftItem$init$_store(builder build_0, (slice, int) v) inline;

;; $NftCollection$init$_load
(slice, ((slice, cell, slice, int, int))) $NftCollection$init$_load(slice sc_0) inline;

;; $NftCollection$_contract_init
(slice, int, cell, slice, int, int) $NftCollection$_contract_init(slice $owner, cell $content, slice $royalty_destination, int $numerator, int $denominator) impure inline_ref;

;; $NftCollection$_contract_load
(slice, int, cell, slice, int, int) $NftCollection$_contract_load() impure inline_ref;

;; $NftCollection$_contract_store
() $NftCollection$_contract_store((slice, int, cell, slice, int, int) v) impure inline;

;; $global_contractAddress
slice $global_contractAddress((cell, cell) $s) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $NftItem$_init_child
(cell, cell) $NftItem$_init_child(cell sys', slice $collection, int $index) inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline;

;; $NftRoyaltyParams$_constructor_numerator_denominator_royalty_destination
((int, int, slice)) $NftRoyaltyParams$_constructor_numerator_denominator_royalty_destination(int numerator, int denominator, slice royalty_destination) inline;

;; $NftCollectionData$_constructor_next_index_content_owner
((int, cell, slice)) $NftCollectionData$_constructor_next_index_content_owner(int next_index, cell content, slice owner) inline;

;; $NftCollection$_fun_get_collection_data
((slice, int, cell, slice, int, int), (int, cell, slice)) $NftCollection$_fun_get_collection_data((slice, int, cell, slice, int, int) $self) impure inline_ref;

;; $NftCollection$_fun_get_nft_address_by_index
((slice, int, cell, slice, int, int), slice) $NftCollection$_fun_get_nft_address_by_index((slice, int, cell, slice, int, int) $self, int $index) impure inline_ref;

;; $NftCollection$_fun_get_nft_content
((slice, int, cell, slice, int, int), cell) $NftCollection$_fun_get_nft_content((slice, int, cell, slice, int, int) $self, int $index, cell $individual_content) impure inline_ref;

;; $NftCollection$_fun_forward
((slice, int, cell, slice, int, int), ()) $NftCollection$_fun_forward((slice, int, cell, slice, int, int) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $NftCollection$_fun_notify
((slice, int, cell, slice, int, int), ()) $NftCollection$_fun_notify((slice, int, cell, slice, int, int) $self, cell $body) impure inline;

;; $NftCollection$_fun_requireOwner
((slice, int, cell, slice, int, int), ()) $NftCollection$_fun_requireOwner((slice, int, cell, slice, int, int) $self) impure inline_ref;

;; $NftCollection$_fun_owner
((slice, int, cell, slice, int, int), slice) $NftCollection$_fun_owner((slice, int, cell, slice, int, int) $self) impure inline_ref;

;; $NftCollection$_fun_royalty_params
((slice, int, cell, slice, int, int), (int, int, slice)) $NftCollection$_fun_royalty_params((slice, int, cell, slice, int, int) $self) impure inline_ref;

;; $SendParameters$_constructor_to_value_mode_bounce_data_code_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce_data_code_body(slice to, int value, int mode, int bounce, cell data, cell code, cell body) inline;

;; $NftDeploy$_constructor_index_owner_content_royalty_destination_numerator_denominator
((int, slice, cell, slice, int, int)) $NftDeploy$_constructor_index_owner_content_royalty_destination_numerator_denominator(int index, slice owner, cell content, slice royalty_destination, int numerator, int denominator) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;

;; $SendParameters$_constructor_to_value_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_body(slice to, int value, int mode, cell body) inline;

;; $NftReportRoyaltyParams$_constructor_query_id_numerator_denominator_destination
((int, int, int, slice)) $NftReportRoyaltyParams$_constructor_query_id_numerator_denominator_destination(int query_id, int numerator, int denominator, slice destination) inline;
